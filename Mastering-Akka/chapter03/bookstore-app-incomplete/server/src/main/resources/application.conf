bookstore{
  include "credit"

  akka {
    stdout-loglevel = off // defaults to WARNING can be disabled with off. The stdout-loglevel is only in effect during system startup and shutdown
    log-dead-letters-during-shutdown = on
    loglevel = debug
    log-dead-letters = on
    log-config-on-start = off // Log the complete configuration at INFO level when the actor system is started

    loggers = ["akka.event.slf4j.Slf4jLogger"]
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

    actor {
      serialize-messages = on
      warn-about-java-serializer-usage = on

      debug {
        receive = on // log all messages sent to an actor if that actors receive method is a LoggingReceive
        autoreceive = off // log all special messages like Kill, PoisoffPill etc sent to all actors
        lifecycle = on // log all actor lifecycle events of all actors
        fsm = on // enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
        event-stream = off // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
      }
    }
  }

  serviceBoots = ["Inventory", "Credit", "User", "Order"]
  
  psqldb{
    numThreads = 10
    driver = "org.postgresql.Driver"
    url = "jdbc:postgresql://localhost:5432/akkaexampleapp"
    url = ${?DATABASE_URL}
    user = "root"
    user = ${?DATABASE_USER}
    password = ""
    password = ${?DATABASE_PASSWORD}
    connectionTestQuery = "select 1"
  }
}
